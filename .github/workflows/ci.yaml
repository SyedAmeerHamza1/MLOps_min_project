name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
    
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
         dvc repro

      - name: Run model test
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
          python -m unittest tests/test_modal.py

      - name: Promote model to production
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
          python scripts/promote_model.py

      - name: Run flask app test
        if: success()
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
          python -m unittest tests/test_flask_app.py

      - name: Log into docker hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build the image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest .

      - name: Push image to docker hub
        if: success()
        run: |
         docker push ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest

      - name: Deploy to EC2
        if: success()
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -p 80:5000 --name my-app -e DAGSHUB_PAT= ${{ secrets.DAGSHUB_PAT }} ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest
