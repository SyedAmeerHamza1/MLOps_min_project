name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
    
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
         dvc repro

      - name: Run model test
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
          python -m unittest tests/test_modal.py

      - name: Promote model to production
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
          python scripts/promote_model.py

      - name: Run flask app test
        if: success()
        env:
          CI_CLASS: ${{ secrets.CI_CLASS }}
        run: |
          python -m unittest tests/test_flask_app.py

      - name: login to aws ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 122610482371.dkr.ecr.ap-southeast-2.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t ecr-ec2 .

      - name: Tag Docker image
        run: |
          docker tag ecr-ec2:latest 122610482371.dkr.ecr.ap-southeast-2.amazonaws.com/ecr-ec2:v2

      - name: push docker image to aws EXR
        run: |
          docker push 122610482371.dkr.ecr.ap-southeast-2.amazonaws.com/ecr-ec2:v2

      - name: Deploy to ecr-ec2
        if: success()
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region ap-southeast-2
            aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 122610482371.dkr.ecr.ap-southeast-2.amazonaws.com
            docker pull 122610482371.dkr.ecr.ap-southeast-2.amazonaws.com/ecr-ec2:v2
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -p 80:5000 -e DAGSHUB_PAT= ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} --name ECR_EC2_CI 122610482371.dkr.ecr.ap-southeast-2.amazonaws.com/ecr-ec2:v2
